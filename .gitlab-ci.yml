default:
  before_script:
    - apk update
    - apk --no-cache add py3-pip python3 curl git jq bash
    #- pip install pip==21.3.1 # workaround: https://stackoverflow.com/a/72469586/470769

    - pip3 install --break-system-packages pyyaml
    - curl -O https://raw.githubusercontent.com/FredHutch/swarm-build-helper/main/build_helper.py 
    # below is from https://stackoverflow.com/a/65810302/470769
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    - set -x

stages:
  - build
  - test
  - deploy



build:
  stage: build
  tags: # TODO REMOVE after shell runner is disabled
    - sc-swarm
  artifacts:
    paths:
      - _site
    expire_in: 2w
  script: |
    set -x
    # put info about this commit/branch into /info.txt
    echo Information > info.txt
    echo "Branch: ${CI_COMMIT_BRANCH}" >> info.txt
    echo "Commit: ${CI_COMMIT_SHA}" >> info.txt
    echo "Commit comment:" >> info.txt
    echo " ${CI_COMMIT_MESSAGE}" >> info.txt
    echo "Build time: $(date)" >> info.txt

    # get markdown pages for easybuild modules
    rm -rf easybuild-life-sciences-main main.zip ./_scicomputing/bio-modules-18.04.md.orig
    # faster than cloning:
    curl -LO https://github.com/FredHutch/easybuild-life-sciences/archive/refs/heads/main.zip
    unzip -qq main.zip
    cp easybuild-life-sciences-main/docs/_r/* ./_rModules/
    cp easybuild-life-sciences-main/docs/_python/* ./_pythonModules/
    cp easybuild-life-sciences-main/docs/bio-modules-18.04.md ./_scicomputing/bio-modules-18.04.md.orig
    FIRST_BLANK_LINE=$(grep -n -m 1 '^$' ./_scicomputing/bio-modules-18.04.md.orig | cut -d: -f1)
    echo "---" >> ./_scicomputing/bio-modules-18.04.md
    echo "title: Scientific Software BioModules" >> ./_scicomputing/bio-modules-18.04.md
    echo "primary_reviewers: fizwit" >> ./_scicomputing/bio-modules-18.04.md
    echo "toc: false" >> ./_scicomputing/bio-modules-18.04.md
    echo  "---" >> ./_scicomputing/bio-modules-18.04.md
    echo >> ./_scicomputing/bio-modules-18.04.md
    tail -n +$FIRST_BLANK_LINE ./_scicomputing/bio-modules-18.04.md.orig >> ./_scicomputing/bio-modules-18.04.md
    rm -rf easybuild-life-sciences-main main.zip ./_scicomputing/bio-modules-18.04.md.orig

    if [ "$CI_COMMIT_BRANCH" == "main" ]; then
      export JEKYLL_ENV=production
    else
      export JEKYLL_ENV=development
    fi
    # build image
    docker build --build-arg JEKYLL_ENV=$JEKYLL_ENV -t sc-registry.fredhutch.org/wiki:test .
    rm -rf _site && mkdir _site
    docker run --rm --name grab-site-files \
      -v $(pwd):/data sc-registry.fredhutch.org/wiki:test \
      sh -c "cp -r /usr/share/nginx/html/* /data/_site/"
    docker push sc-registry.fredhutch.org/wiki:test



test:
  stage: test
  tags: # TODO REMOVE after shell runner is disabled
    - sc-swarm
  services:
    - name: sc-registry.fredhutch.org/wiki:test
      alias: wiki
      command: ["/test.sh"]
  script: |
    set -x
    if [ "$CI_COMMIT_BRANCH" == "main" ]; then
      echo "Don't check docker-compose until we deploy to swarm"
      # python3 build_helper.py docker-compose.yml > /dev/null
    else
      python3 build_helper.py docker-compose-preview.yml > /dev/null
    fi
    curl -sI http://wiki:80 | head -1 | grep -q "200 OK"

check_for_orphan_assets:
  stage: test
  tags: # TODO REMOVE after shell runner is disabled
    - sc-swarm
  only:
    refs:
       - main
  before_script:
    - apk add curl git
    - curl -LO https://github.com/cli/cli/releases/download/v2.16.1/gh_2.16.1_linux_amd64.tar.gz
    - tar zxf gh_2.16.1_linux_amd64.tar.gz
    - cp gh_2.16.1_linux_amd64/bin/gh /usr/local/bin
    - rm -rf gh_2.16.1_linux_amd64.tar.gz gh_2.16.1_linux_amd64
  script: |
    # find orphan assets
    rm -f orphans.txt*
    for F in $(find assets/* -type f) ; do grep -r -q $F * || echo "$F"; done > orphans.txt.tmp
    #cat orphans.txt.tmp | fgrep -v "assets/css/" | fgrep -v "assets/js/" > orphans.txt
    fgrep -v "assets/css/" orphans.txt.tmp > orphans.txt.css || true
    fgrep -v "assets/js/" orphans.txt.css > orphans.txt || true
    ls -l orphans.txt
    echo "---"
    if [ -s orphans.txt ] ; then
      echo "Orphan files found:"
      cat orphans.txt
      # This files an issue. 
      # It seems to be a little tricky to figure out the github ID of
      # whoever made the commit introducing the orphan asset(s). 
      # So leaving that bit out for now.
      rm -f issue.txt
      echo "There are one or more orphan assets in the wiki. " > issue.txt
      echo "These are images or other files that are not linked to." >> issue.txt
      echo "Please remove them and push again." >> issue.txt
      echo "Then you can close this issue." >> issue.txt
      echo >> issue.txt
      echo "Orphan files:" >> issue.txt
      echo >> issue.txt
      cat orphans.txt >> issue.txt
      # TODO fix this:
      ######## gh issue create --title "Orphan asset files in wiki" --body-file issue.txt
      # Should we really break the build here? We have created an issue
      # so not sure if breaking the build would be redundant. 
      # Let's not break the build for now. Commented this out:
      ### exit 1
    fi



# build for every branch EXCEPT main and push to preview site
# https://sciwiki-preview.fredhutch.org (only accessible inside
# hutch network). See 
# https://sciwiki-preview.fredhutch.org/info.txt for branch
# and commit information.

deploy_preview:
  stage: deploy
  tags: # TODO REMOVE after shell runner is disabled
    - sc-swarm
  except: 
    refs:
      - main
  script:
    - docker tag sc-registry.fredhutch.org/wiki:test sc-registry.fredhutch.org/wiki-preview:latest 
    - docker push sc-registry.fredhutch.org/wiki-preview:latest
    - sleep 15
    - echo $SC_SWARM_CICD_SSH_KEY | base64 -d > ./sc_swarm_cicd_ssh_key
    - chmod 0400 ./sc_swarm_cicd_ssh_key
    - python3 build_helper.py docker-compose-preview.yml | ssh -i ./sc_swarm_cicd_ssh_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@sc-swarm-mgr.fhcrc.org docker stack deploy --with-registry-auth -c - sciwiki-preview

# deploy `main` branch to
# https://sciwiki.fredhutch.org

deploy:
  stage: deploy
  tags: # TODO REMOVE after shell runner is disabled
    - sc-swarm
  only:
    refs:
       - main
  script: |
    docker tag sc-registry.fredhutch.org/wiki:test sc-registry.fredhutch.org/wiki:latest 

    docker push sc-registry.fredhutch.org/wiki:latest
    sleep 15
    echo $SC_SWARM_CICD_SSH_KEY | base64 -d > ./sc_swarm_cicd_ssh_key
    chmod 0400 ./sc_swarm_cicd_ssh_key
    python3 build_helper.py docker-compose.yml | ssh -i ./sc_swarm_cicd_ssh_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@sc-swarm-mgr.fhcrc.org docker stack deploy --with-registry-auth -c - wiki
